|display_divider
clk => divider:dut.clk
start => divider:dut.start
dividend[0] => divider:dut.dividend[0]
dividend[1] => divider:dut.dividend[1]
dividend[2] => divider:dut.dividend[2]
dividend[3] => divider:dut.dividend[3]
dividend[4] => divider:dut.dividend[4]
dividend[5] => divider:dut.dividend[5]
dividend[6] => divider:dut.dividend[6]
dividend[7] => divider:dut.dividend[7]
divisor[0] => divider:dut.divisor[0]
divisor[1] => divider:dut.divisor[1]
divisor[2] => divider:dut.divisor[2]
divisor[3] => divider:dut.divisor[3]
overflow << divider:dut.overflow
output_display[0] << leddcd:g2:0:mth_display.segments_out[0]
output_display[1] << leddcd:g2:0:mth_display.segments_out[1]
output_display[2] << leddcd:g2:0:mth_display.segments_out[2]
output_display[3] << leddcd:g2:0:mth_display.segments_out[3]
output_display[4] << leddcd:g2:0:mth_display.segments_out[4]
output_display[5] << leddcd:g2:0:mth_display.segments_out[5]
output_display[6] << leddcd:g2:0:mth_display.segments_out[6]
output_display[7] << leddcd:g1:0:nth_display.segments_out[0]
output_display[8] << leddcd:g1:0:nth_display.segments_out[1]
output_display[9] << leddcd:g1:0:nth_display.segments_out[2]
output_display[10] << leddcd:g1:0:nth_display.segments_out[3]
output_display[11] << leddcd:g1:0:nth_display.segments_out[4]
output_display[12] << leddcd:g1:0:nth_display.segments_out[5]
output_display[13] << leddcd:g1:0:nth_display.segments_out[6]
output_display[14] << leddcd:g1:1:nth_display.segments_out[0]
output_display[15] << leddcd:g1:1:nth_display.segments_out[1]
output_display[16] << leddcd:g1:1:nth_display.segments_out[2]
output_display[17] << leddcd:g1:1:nth_display.segments_out[3]
output_display[18] << leddcd:g1:1:nth_display.segments_out[4]
output_display[19] << leddcd:g1:1:nth_display.segments_out[5]
output_display[20] << leddcd:g1:1:nth_display.segments_out[6]
sign << divider:dut.sign


|display_divider|divider:dut
clk => sign~reg0.CLK
clk => overflow~reg0.CLK
clk => remainder[0]~reg0.CLK
clk => remainder[1]~reg0.CLK
clk => remainder[2]~reg0.CLK
clk => remainder[3]~reg0.CLK
clk => quotient[0]~reg0.CLK
clk => quotient[1]~reg0.CLK
clk => quotient[2]~reg0.CLK
clk => quotient[3]~reg0.CLK
clk => quotient[4]~reg0.CLK
clk => quotient[5]~reg0.CLK
clk => quotient[6]~reg0.CLK
clk => quotient[7]~reg0.CLK
clk => sq[0].CLK
clk => sq[1].CLK
clk => sq[2].CLK
clk => sq[3].CLK
clk => sq[4].CLK
clk => sq[5].CLK
clk => sq[6].CLK
clk => sq[7].CLK
clk => sb[0].CLK
clk => sb[1].CLK
clk => sb[2].CLK
clk => sb[3].CLK
clk => sa[0].CLK
clk => sa[1].CLK
clk => sa[2].CLK
clk => sa[3].CLK
clk => sa[4].CLK
clk => sa[5].CLK
clk => sa[6].CLK
clk => sa[7].CLK
clk => sN[0].CLK
clk => sN[1].CLK
clk => sN[2].CLK
clk => sN[3].CLK
clk => sN[4].CLK
clk => sN[5].CLK
clk => sN[6].CLK
clk => sN[7].CLK
clk => sN[8].CLK
clk => sN[9].CLK
clk => sN[10].CLK
clk => sN[11].CLK
clk => sN[12].CLK
clk => sN[13].CLK
clk => sN[14].CLK
clk => sN[15].CLK
clk => sN[16].CLK
clk => sN[17].CLK
clk => sN[18].CLK
clk => sN[19].CLK
clk => sN[20].CLK
clk => sN[21].CLK
clk => sN[22].CLK
clk => sN[23].CLK
clk => sN[24].CLK
clk => sN[25].CLK
clk => sN[26].CLK
clk => sN[27].CLK
clk => sN[28].CLK
clk => sN[29].CLK
clk => sN[30].CLK
clk => sN[31].CLK
clk => \output_and_next_state_logic:temp_remainder[0].CLK
clk => \output_and_next_state_logic:temp_remainder[1].CLK
clk => \output_and_next_state_logic:temp_remainder[2].CLK
clk => \output_and_next_state_logic:temp_remainder[3].CLK
clk => \output_and_next_state_logic:temp_quotient[0].CLK
clk => \output_and_next_state_logic:temp_quotient[1].CLK
clk => \output_and_next_state_logic:temp_quotient[2].CLK
clk => \output_and_next_state_logic:temp_quotient[3].CLK
clk => \output_and_next_state_logic:temp_quotient[4].CLK
clk => \output_and_next_state_logic:temp_quotient[5].CLK
clk => \output_and_next_state_logic:temp_quotient[6].CLK
clk => \output_and_next_state_logic:temp_quotient[7].CLK
clk => \output_and_next_state_logic:temp_overflow.CLK
clk => \output_and_next_state_logic:temp_sign.CLK
clk => next_state~1.DATAIN
clk => state~1.DATAIN
start => state~3.DATAIN
dividend[0] => LessThan0.IN16
dividend[0] => a.DATAA
dividend[0] => ShiftRight3.IN39
dividend[0] => Add0.IN16
dividend[1] => LessThan0.IN15
dividend[1] => a.DATAA
dividend[1] => ShiftRight3.IN38
dividend[1] => Add0.IN15
dividend[2] => LessThan0.IN14
dividend[2] => a.DATAA
dividend[2] => ShiftRight3.IN37
dividend[2] => Add0.IN14
dividend[3] => LessThan0.IN13
dividend[3] => a.DATAA
dividend[3] => ShiftRight3.IN36
dividend[3] => Add0.IN13
dividend[4] => LessThan0.IN12
dividend[4] => a.DATAA
dividend[4] => ShiftRight3.IN35
dividend[4] => Add0.IN12
dividend[5] => LessThan0.IN11
dividend[5] => a.DATAA
dividend[5] => ShiftRight3.IN34
dividend[5] => Add0.IN11
dividend[6] => LessThan0.IN10
dividend[6] => a.DATAA
dividend[6] => ShiftRight3.IN33
dividend[6] => Add0.IN10
dividend[7] => LessThan0.IN9
dividend[7] => a.DATAA
dividend[7] => temp_sign.IN0
dividend[7] => ShiftRight3.IN32
dividend[7] => Add0.IN9
divisor[0] => LessThan1.IN8
divisor[0] => b.DATAA
divisor[0] => Add1.IN8
divisor[0] => Equal6.IN3
divisor[0] => Equal8.IN3
divisor[0] => Equal9.IN3
divisor[1] => LessThan1.IN7
divisor[1] => b.DATAA
divisor[1] => Add1.IN7
divisor[1] => Equal6.IN2
divisor[1] => Equal8.IN2
divisor[1] => Equal9.IN2
divisor[2] => LessThan1.IN6
divisor[2] => b.DATAA
divisor[2] => Add1.IN6
divisor[2] => Equal6.IN1
divisor[2] => Equal8.IN1
divisor[2] => Equal9.IN1
divisor[3] => LessThan1.IN5
divisor[3] => b.DATAA
divisor[3] => temp_sign.IN1
divisor[3] => Add1.IN5
divisor[3] => Equal6.IN0
divisor[3] => Equal8.IN0
divisor[3] => Equal9.IN0
quotient[0] <= quotient[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= quotient[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= quotient[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= quotient[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= quotient[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= quotient[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= quotient[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[7] <= quotient[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= remainder[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= remainder[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= remainder[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= remainder[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
overflow <= overflow~reg0.DB_MAX_OUTPUT_PORT_TYPE
sign <= sign~reg0.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\g1:0:nth_display
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\g1:1:nth_display
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\g2:0:mth_display
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


