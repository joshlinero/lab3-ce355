library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
--Additional standard or custom libraries go here

entity comparator is
	generic(
		  DATA_WIDTH : natural := 4)
		 );
	port(
		  --Inputs
		  DINL : in std_logic_vector (DATA_WIDTH downto 0);
		  DINR : in std_logic_vector (DATA_WIDTH - 1 downto 0);
		  
		  --Outputs
		  DOUT : out std_logic_vector (DATA_WIDTH - 1 downto 0);
		  isGreaterEq : out std_logic
		  
		 );
end entity comparator;

architecture behavioral of comparator is
--Signals and components go here
	-- signal subtraction_result : std_logic_vector(DATA_WIDTH downto 0); 

begin
--Behavioral design goes here
	greater: process(DINL, DINR)
		begin
			if unsigned(DINL) >= unsigned(DINR) then
            DOUT <= std_logic_vector(unsigned(DINL) - unsigned(DINR)); -- Set DOUT to the remainder
            isGreaterEq <= '1'; -- Set isGreaterEq to 1 when DINL >= DINR
			else
            DOUT <= DINL(DATA_WIDTH - 1 downto 0); -- Set DOUT to DINL when DINL < DINR
            isGreaterEq <= '0'; -- Set isGreaterEq to 0 when DINL < DINR
			end if;
    end process greater;

end architecture behavioral;